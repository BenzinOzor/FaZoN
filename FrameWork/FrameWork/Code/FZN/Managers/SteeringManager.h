//------------------------------------------------------------------------
//Author : Philippe OFFERMANN
//Date : 13.02.15
//Description : Manages the steering entities
//------------------------------------------------------------------------

#ifndef _STEERINGMANAGER_H_
#define _STEERINGMANAGER_H_

#include "FZN/DataStructure/Vector.h"


namespace fzn
{
	class SteeringEntity;
	class SteeringObject;

	class FZN_EXPORT SteeringManager : sf::NonCopyable
	{
	public:
		/////////////////CONSTRUCTOR / DESTRUCTOR/////////////////

		//------------------------------------------------------------------------------------------------------------------------------------------------------------------
		//Default constructor
		//------------------------------------------------------------------------------------------------------------------------------------------------------------------
		SteeringManager();
		//------------------------------------------------------------------------------------------------------------------------------------------------------------------
		//Destructor
		//------------------------------------------------------------------------------------------------------------------------------------------------------------------
		~SteeringManager();


		/////////////////ARRAYS MANAGEMENT/////////////////

		//------------------------------------------------------------------------------------------------------------------------------------------------------------------
		//Adds an entity in the manager's array
		//Parameter : Entity to add
		//Return value : Index in which the entity has been placed
		//------------------------------------------------------------------------------------------------------------------------------------------------------------------
		INT8 AddEntity( SteeringEntity* _entity );
		//------------------------------------------------------------------------------------------------------------------------------------------------------------------
		//Removes an entity from the manager's array
		//Parameter : Entity to remove
		//------------------------------------------------------------------------------------------------------------------------------------------------------------------
		INT8 RemoveEntity( SteeringEntity* _entity );
		//------------------------------------------------------------------------------------------------------------------------------------------------------------------
		//Adds an object in the manager's array
		//Parameter : Object to add
		//Return value : Index in which the object has been placed
		//------------------------------------------------------------------------------------------------------------------------------------------------------------------
		INT8 AddObject( SteeringObject* _object );
		//------------------------------------------------------------------------------------------------------------------------------------------------------------------
		//Removes an object from the manager's array
		//Parameter : Object to remove
		//------------------------------------------------------------------------------------------------------------------------------------------------------------------
		INT8 RemoveObject( SteeringObject* _object );
		//------------------------------------------------------------------------------------------------------------------------------------------------------------------
		//Updates all the entities in the array
		//------------------------------------------------------------------------------------------------------------------------------------------------------------------
		void Update();


		/////////////////ACCESSOR / MUTATOR/////////////////

		//------------------------------------------------------------------------------------------------------------------------------------------------------------------
		//Accessor on number of entities in the manager
		//Return value : Number of entities
		//------------------------------------------------------------------------------------------------------------------------------------------------------------------
		int GetEntitiesNumber();
		//------------------------------------------------------------------------------------------------------------------------------------------------------------------
		//Accessor on number of objects in the manager
		//Return value : Number of objects
		//------------------------------------------------------------------------------------------------------------------------------------------------------------------
		int GetObjectsNumber();
		//------------------------------------------------------------------------------------------------------------------------------------------------------------------
		//Accessor on the entities array
		//Return value : Entities
		//------------------------------------------------------------------------------------------------------------------------------------------------------------------
		Vector<SteeringEntity*>& GetEntities();
		//------------------------------------------------------------------------------------------------------------------------------------------------------------------
		//Accessor on the objects array
		//Return value : Objects
		//------------------------------------------------------------------------------------------------------------------------------------------------------------------
		Vector<SteeringObject*>& GetObjects();


		/////////////////MEMBER VARIABLES/////////////////

		int m_iReallocSize;								//Size to add to the array for the reallocation

	private:
		/////////////////MEMBER VARIABLES/////////////////

		/////////////////ENTITIES MANAGEMENT/////////////////

		Vector<SteeringEntity*> m_entities;						//Container of all the steering entities		
		int m_iNbEntities;										//The number of entities currently in the array

		/////////////////OBJECTS MANAGEMENT/////////////////

		Vector<SteeringObject*> m_objects;							//Container of all the animations in use			
		int m_iNbObjects;										//The number of objects currently in the array
	};
} //namespace fzn

extern FZN_EXPORT fzn::SteeringManager* g_pFZN_SteeringMgr;

#endif //_STEERINGMANAGER_H_
