//------------------------------------------------------------------------
//Author : Philippe OFFERMANN
//Date : 13.02.15
//Description : Entities used in the steering behaviors
//------------------------------------------------------------------------

#ifndef _STEERINGENTITY_H_
#define _STEERINGENTITY_H_

class SteeringBehavior;
class WeightedBehavior;

namespace fzn
{
	class FZN_EXPORT SteeringEntity
	{
	public:
		/////////////////CONSTRUCTOR / DESTRUCTOR/////////////////

		//------------------------------------------------------------------------------------------------------------------------------------------------------------------
		//Default constructor
		//------------------------------------------------------------------------------------------------------------------------------------------------------------------
		SteeringEntity();
		//------------------------------------------------------------------------------------------------------------------------------------------------------------------
		//Destructor
		//------------------------------------------------------------------------------------------------------------------------------------------------------------------
		~SteeringEntity();


		/////////////////ENTITY MANAGEMENT/////////////////

		//------------------------------------------------------------------------------------------------------------------------------------------------------------------
		//Calculation of the steering force to apply on the entity
		//------------------------------------------------------------------------------------------------------------------------------------------------------------------
		sf::Vector2f Steer();
		//------------------------------------------------------------------------------------------------------------------------------------------------------------------
		//Calculation of the steering force to apply on the entity
		//------------------------------------------------------------------------------------------------------------------------------------------------------------------
		void Update();
		//------------------------------------------------------------------------------------------------------------------------------------------------------------------
		//Display of the entity
		//------------------------------------------------------------------------------------------------------------------------------------------------------------------
		void Display();
		//------------------------------------------------------------------------------------------------------------------------------------------------------------------
		//Addition of a steering behavior on the class SteeringEntity
		//Parameter 1 : Desired behavior
		//Parameter 2 : Weight of the behavior
		//------------------------------------------------------------------------------------------------------------------------------------------------------------------
		void AddBehavior(SteeringBehavior* _behavior, float _weight);
		//------------------------------------------------------------------------------------------------------------------------------------------------------------------
		//Removes all the behaviors from the entity
		//------------------------------------------------------------------------------------------------------------------------------------------------------------------
		void ClearBehaviors();


		/////////////////ACCESSORS / MUTATORS/////////////////

		//------------------------------------------------------------------------------------------------------------------------------------------------------------------
		//Accessor on the last force applied to the entity
		//Return value : Last force applied
		//------------------------------------------------------------------------------------------------------------------------------------------------------------------
		sf::Vector2f GetLastForce();


		/////////////////MEMBER VARIABLES/////////////////

		float m_mass;
		float m_maxForce;			//Maximum force applicable to the entity
		float m_maxSpeed;			//Maxium speed applicable to the entity
		sf::Vector2f m_position;
		sf::Vector2f m_velocity;
		float m_fWanderAngle;		//Angle of the wander displacement

		INT8 m_isInManager;		//Indicates if the animation is in the manager or not

	private:
		/////////////////MEMBER VARIABLES/////////////////

		sf::Vector2f m_lastForce;		//Last force applied to the entity

		std::vector<WeightedBehavior*> m_behaviors;			 // All the behaviors and their weight associated

		sf::CircleShape m_shape;

	};
} //namespace fzn

#endif //_STEERINGENTITY_H_